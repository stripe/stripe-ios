# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1
orbs:
  macos: circleci/macos@2.0.0
commands:
  prep_all:
    description: "Prep the build environment, bundler, and carthage"
    steps:
      - prep_simulator
      - prep_environment
      - prep_clone
      - prep_bundler_spm
  prep_installtests_132:
    description: "Preps the build environment for Xcode 13.2"
    steps:
      - run: git clone --depth 1 "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .
      - run: "bundle config set path 'vendor/bundle'"
      - run: "bundle config set frozen 'true'"
      - run: "bundle config set without 'development'"
      - restore_cache:
          key: v1-{{ checksum "Gemfile.lock" }}-stp-bundle-xcode-132-cache # Update this if Xcode version change
      - run: "bundle install"
      - save_cache:
          key: v1-{{ checksum "Gemfile.lock" }}-stp-bundle-xcode-132-cache
          paths:
            - vendor
  prep_clone:
    description: "Shallow clones the repo"
    steps:
      - run: git clone --depth 1 "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .
  prep_bundler_spm:
    description: "Prep the build environment, bundler, and spm"
    steps:
      - run: "bundle config set path 'vendor/bundle'"
      - run: "bundle config set frozen 'true'"
      - run: "bundle config set without 'development'"
      - restore_cache:
          key: v1-{{ checksum "Stripe.xcworkspace/xcshareddata/swiftpm/Package.resolved" }}-stp-spm-xcode-133-cache # Update this if Xcode version change
      - restore_cache:
          key: v1-{{ checksum "Gemfile.lock" }}-stp-bundle-xcode-133-cache # Update this if Xcode version change
      - run: "bundle install"
      - save_cache:
          key: v1-{{ checksum "Gemfile.lock" }}-stp-bundle-xcode-133-cache
          paths:
            - vendor
  prep_environment:
    description: "Prep environment variables to build to local folder"
    steps:
      - run: "bundle config set path 'vendor/bundle'"
      - run: "bundle config set without 'development'"
      - run: echo "export CONFIGURATION_BUILD_DIR=$CIRCLE_WORKING_DIRECTORY/stpbuild/products" >> $BASH_ENV
      - run: echo "export CONFIGURATION_TEMP_DIR=$CIRCLE_WORKING_DIRECTORY/stpbuild/intermediates" >> $BASH_ENV
  prep_simulator:
    description: "Prep simulators"
    steps:
      - macos/preboot-simulator:
          version: "15.4"
          platform: "iOS"
          device: "iPhone 12 mini"
  archive_logs:
    description: Archive logs
    steps:
      - run:
          name: Archive test results
          command: "mkdir -p circle-results && tar -acf circle-results/$CIRCLE_JOB-node-$CIRCLE_NODE_INDEX-logs.tar.bz2 build-ci-tests/Logs/Test || true"
          when: always # on failure or success
      - store_artifacts:
          path: circle-results
          destination: logs
  save_spm_cache:
    description: Save SPM cache
    steps:
      - save_cache:
          key: v1-{{ checksum "Stripe.xcworkspace/xcshareddata/swiftpm/Package.resolved" }}-stp-spm-xcode-133-cache
          paths:
            - SourcePackages/

executors:
  mac-executor:
    macos:
      xcode: 13.3.0
    resource_class: macos.x86.medium.gen2
  xcode-132-mac-executor:
    macos:
      xcode: 13.2.1
    resource_class: macos.x86.medium.gen2

jobs:
  size-report:
    executor: mac-executor

    steps:
      - macos/switch-ruby:
          version: "system" # Xcode's ipatool depends on a specific version of ruby, without this App Store archiving will fail
      - run: git clone "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .
      - run: "sudo gem install bundler"
      - run: "bundle config set without 'development'"
      - run: "bundle install"
      - run:
          name: "Run size report"
          command: "bundle exec fastlane size_report"

  framework-tests:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane preflight"
      - run: "bundle exec fastlane threeds2_tests"
      - run: "bundle exec fastlane stripepayments_tests"
      - run: "bundle exec fastlane stripepaymentsui_tests"
      - run: "bundle exec fastlane stripepaymentsheet_tests"
      - run: "bundle exec fastlane stripeios_tests"
      - run: "bundle exec fastlane stripecameracore_tests"
      - run: "bundle exec fastlane stripecore_tests"
      - run: "bundle exec fastlane stripeidentity_tests"
      - run: "bundle exec fastlane stripefinancialconnections_tests"
      - run: "bundle exec fastlane stripecardscan_tests"
      - run: "bundle exec fastlane stripeapplepay_tests"
      - run: "bundle exec fastlane stripeuicore_tests"
      - save_spm_cache
      - archive_logs

  install-tests:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane installation_cocoapods_without_frameworks_objc"
      - run: "bundle exec fastlane installation_cocoapods_frameworks_objc"
      - run: "bundle exec fastlane installation_cocoapods_frameworks_swift"
      - run: "bundle exec fastlane installation_spm_objc"
      - run: "bundle exec fastlane installation_spm_swift"
      - run: "bundle exec fastlane installation_carthage"
      - save_spm_cache
      - archive_logs

  lint-tests:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane check_changelog"
      - run: "bundle exec fastlane build_extras"
      - run: "bundle exec fastlane analyze"
      - run: "bundle exec fastlane objc_symbol_check"
      - save_spm_cache
      - archive_logs

  check-docs:
    executor: mac-executor

    steps:
      - prep_all
      - run: "brew install sourcekitten"
      - run: "bundle exec fastlane check_docs"
      - save_spm_cache
      - archive_logs

  ui-tests:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane ui_tests"
      - run: "bundle exec fastlane paymentsheet_tests"
      - save_spm_cache
      - archive_logs

  e2e-only:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane e2e_only"
      - save_spm_cache
      - archive_logs
      - run:
          name: Notify on success
          command: "./ci_scripts/notify.rb pass"
          when: on_success
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify.rb fail"
          when: on_fail

  xcode-132-install-tests:
    executor: xcode-132-mac-executor
    parallelism: 3

    steps:
      - prep_installtests_132
      - run: |
          bundle exec ./ci_scripts/circle_parallelize.rb \
          installation_cocoapods_without_frameworks_objc \
          installation_cocoapods_frameworks_objc \
          installation_cocoapods_frameworks_swift \
          installation_spm_objc \
          installation_spm_swift \
          installation_carthage
      - save_spm_cache
      - archive_logs
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

  deploy-dry-run:
    executor: xcode-132-mac-executor

    steps:
      - run: git clone "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .
      - run: "sudo gem install bundler"
      - run: "bundle config set without 'development'"
      - run: "bundle install"
      - run: "brew install sourcekitten"
      - run: "bundle exec ./ci_scripts/create_release.rb --version 99.99.99 --dry-run"
      - run: "bundle exec ./ci_scripts/deploy_release.rb --dry-run"
      - archive_logs
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

  basic-integration-tests:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane basic_integration_tests"
      - save_spm_cache
      - archive_logs
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

  export-builds:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane export_builds"
      - save_spm_cache
      - archive_logs
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

  paymentsheet-tests:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane paymentsheet_tests"
      - save_spm_cache
      - archive_logs

  integration-all:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane integration_all"
      - save_spm_cache
      - archive_logs
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

  linting-tests:
    executor: mac-executor

    steps:
      - prep_environment
      - prep_clone
      - prep_bundler_spm
      - run: "bundle exec fastlane linting_tests"
      - save_spm_cache
      - archive_logs

  legacy-tests-13:
    executor: mac-executor

    steps:
      - prep_environment
      - prep_clone
      - prep_bundler_spm
      - run:
          name: "Install old simulator"
          no_output_timeout: 20m
          command: sudo bundle exec xcversion simulators --install="iOS 13.7" --no-progress || true
      - run: "bundle exec fastlane legacy_tests_13"
      - save_spm_cache
      - archive_logs
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

  legacy-tests-14:
    executor: mac-executor

    steps:
      - prep_environment
      - prep_clone
      - prep_bundler_spm
      - run: "bundle exec fastlane legacy_tests_14"
      - save_spm_cache
      - archive_logs
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

  data-theorem-sast:
    executor: mac-executor

    steps:
      - prep_clone
      - macos/switch-ruby:
          version: "system" # Xcode's ipatool depends on a specific version of ruby, without this App Store archiving will fail
      - run: "sudo gem install bundler"
      - run: "bundle install"
      - run:
          name: "Submit app to Data Theorem for SAST"
          command: bundle exec ./ci_scripts/push_dt.rb "$CIRCLE_BRANCH" "$DT_UPLOAD_API_KEY"
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

workflows:
  version: 2.1
  build-and-test:
    jobs:
      - size-report:
          context:
            - EmergeTools
      - framework-tests
      - ui-tests
      - install-tests
      - lint-tests
      - check-docs
      - legacy-tests-13:
          filters:
            branches:
              only:
                - /releases\/.*/
      - legacy-tests-14:
          filters:
            branches:
              only:
                - /releases\/.*/
      - xcode-132-install-tests:
          filters:
            branches:
              only:
                - /releases\/.*/
      - export-builds:
          filters:
            branches:
              only:
                - /releases\/.*/
  e2e-only:
    triggers:
      - schedule:
          cron: "56 8 * * *" # at 8:56 every day
          filters:
            branches:
              only:
                - master
    jobs:
      - e2e-only:
          context:
            - E2EEndpoint
  integration-all:
    triggers:
      - schedule:
          cron: "51 10 * * *" # at 10:51 every day
          filters:
            branches:
              only:
                - master
    jobs:
      - integration-all:
          context:
            - E2EEndpoint
      - basic-integration-tests:
          context:
            - E2EEndpoint
      - deploy-dry-run:
          context:
            - E2EEndpoint
      - legacy-tests-13:
          context:
            - E2EEndpoint
      - legacy-tests-14:
          context:
            - E2EEndpoint
      - xcode-132-install-tests:
          context:
            - E2EEndpoint
      - export-builds:
          context:
            - E2EEndpoint
      - data-theorem-sast:
          context:
            - DT
            - E2EEndpoint
