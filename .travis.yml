language: objective-c
os: osx
osx_image: xcode8.3
branches:
  only:
    - master

  global:
    secure: gZMOaHQIeG7nplBCuH7EKf9o6Ez2rtoSskrv3nOTziSxFfZq322MrxvkidDpEN7AKWYQm27FO+tCzgq0slXb578lQ9P5ySDwEdExKtk/jMtKsBsf3cr4dzSMiqV5D5TbsH2jE9HQlpYUoJeoMBicR2XsTmd7wiu2jAzNBFqGfiY=

matrix:
  include:
  - osx_image: xcode8.3 ## Xcode 8, iOS 10. No static analyzer or docs
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=installation_manual
  - osx_image: xcode8.3
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=installation_carthage
  - osx_image: xcode8.3
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=installation_cocoapods
  - osx_image: xcode8.3
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=installation_cocoapods_frameworks
  - osx_image: xcode8.3
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=tests
  - osx_image: xcode8.3 ## TODO: Move fauxpas to Xcode11 image when it updates
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=lint
  - osx_image: xcode9.2 ## Xcode 9, iOS 10. No analyzer, docs, or linting
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=installation_manual
  - osx_image: xcode9.2
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=installation_carthage
  - osx_image: xcode9.2
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=installation_cocoapods
  - osx_image: xcode9.2
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=installation_cocoapods_frameworks
  - osx_image: xcode9.2
    env:
      - SIMULATOR_NAME='iPhone 6 (10.3)'
      - TEST_TYPE=tests
  - osx_image: xcode9.2 ## Xcode 9, iOS 11. No linting (fauxpas currently only does xcode 8.3 linting)
    env:
      - SIMULATOR_NAME='iPhone 6 (11.2)'
      - TEST_TYPE=installation_manual
  - osx_image: xcode9.2
    env:
      - SIMULATOR_NAME='iPhone 6 (11.2)'
      - TEST_TYPE=installation_carthage
  - osx_image: xcode9.2
    env:
      - SIMULATOR_NAME='iPhone 6 (11.2)'
      - TEST_TYPE=installation_cocoapods
  - osx_image: xcode9.2
    env:
      - SIMULATOR_NAME='iPhone 6 (11.2)'
      - TEST_TYPE=installation_cocoapods_frameworks
  - osx_image: xcode9.2
    env:
      - SIMULATOR_NAME='iPhone 6 (11.2)'
      - TEST_TYPE=tests
  - osx_image: xcode9.2
    env:
      - SIMULATOR_NAME='iPhone 6 (11.2)'
      - TEST_TYPE=analyzer

before_install:
- SIMULATOR_ID=$(xcrun instruments -s | grep -o "$SIMULATOR_NAME \[.*\]" | grep -o "\[.*\]" | sed "s/^\[\(.*\)\]$/\1/")
script:
- open -a "simulator" --args -CurrentDeviceUDID $SIMULATOR_ID
- "./ci_scripts/check_version.rb"
- "./ci_scripts/check_public_headers.rb"
- "./ci_scripts/check_category_linking.rb"
- "./ci_scripts/check_resource_bundle.rb"
- '[ "$TEST_TYPE" != lint ] || ./ci_scripts/check_fauxpas.sh'
- '[ "$TEST_TYPE" != tests ] || travis_retry ./ci_scripts/run_tests.sh' "$SIMULATOR_ID"
- '[ "$TEST_TYPE" != analyzer ] || ./ci_scripts/run_analyzer.sh'
- '[ "$TEST_TYPE" != installation_cocoapods ] || ./Tests/installation_tests/cocoapods/without_frameworks/test.sh' "$SIMULATOR_ID"
- '[ "$TEST_TYPE" != installation_cocoapods_frameworks ] || ./Tests/installation_tests/cocoapods/with_frameworks/test.sh' "$SIMULATOR_ID"
- '[ "$TEST_TYPE" != installation_manual ] || travis_retry ./Tests/installation_tests/manual_installation/test.sh' "$SIMULATOR_ID"
- '[ "$TEST_TYPE" != installation_carthage ] || ./Tests/installation_tests/carthage/test.sh' "$SIMULATOR_ID"
- '[ "$TEST_TYPE" != documentation ] || ./ci_scripts/check_documentation.sh'
