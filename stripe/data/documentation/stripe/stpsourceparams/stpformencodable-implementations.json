{"variants":[{"paths":["\/documentation\/stripe\/stpsourceparams\/stpformencodable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"Stripe"}],"title":"STPFormEncodable Implementations"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.stripe.stripe-ios\/documentation\/Stripe\/STPSourceParams\/STPFormEncodable-Implementations"},"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.stripe.stripe-ios\/documentation\/Stripe","doc:\/\/com.stripe.stripe-ios\/documentation\/Stripe\/STPSourceParams"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/com.stripe.stripe-ios\/documentation\/Stripe\/STPSourceParams\/propertyNamesToFormFieldNamesMapping()","doc:\/\/com.stripe.stripe-ios\/documentation\/Stripe\/STPSourceParams\/rootObjectName()"],"generated":true,"title":"Type Methods","anchor":"Type-Methods"}],"references":{"doc://com.stripe.stripe-ios/documentation/Stripe/STPSourceParams/propertyNamesToFormFieldNamesMapping()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"propertyNamesToFormFieldNamesMapping"},{"kind":"text","text":"() -> ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"This maps properties on an object that is being form-encoded into parameter names in the Stripe API. For example, STPCardParams has a field called "},{"type":"codeVoice","code":"expMonth"},{"text":", but the Stripe API expects a field called ","type":"text"},{"type":"codeVoice","code":"exp_month"},{"text":". This dictionary represents a mapping from the former to the latter (in other words, STPCardParams.propertyNamesToFormFieldNamesMapping()[“expMonth”] == “exp_month”.)","type":"text"}],"url":"\/documentation\/stripe\/stpsourceparams\/propertynamestoformfieldnamesmapping()","identifier":"doc:\/\/com.stripe.stripe-ios\/documentation\/Stripe\/STPSourceParams\/propertyNamesToFormFieldNamesMapping()","title":"propertyNamesToFormFieldNamesMapping()","role":"symbol","type":"topic"},"doc://com.stripe.stripe-ios/documentation/Stripe/STPSourceParams/rootObjectName()":{"kind":"symbol","title":"rootObjectName()","identifier":"doc:\/\/com.stripe.stripe-ios\/documentation\/Stripe\/STPSourceParams\/rootObjectName()","role":"symbol","url":"\/documentation\/stripe\/stpsourceparams\/rootobjectname()","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rootObjectName"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The root object name to be used when converting this object to a form-encoded string. For example, if this returns “card”, then the form-encoded output will resemble “card[foo]=bar” (where ‘foo’ and ‘bar’ are specified by "},{"type":"codeVoice","code":"propertyNamesToFormFieldNamesMapping"},{"type":"text","text":" below."}],"type":"topic"},"doc://com.stripe.stripe-ios/documentation/Stripe":{"url":"\/documentation\/stripe","title":"Stripe","identifier":"doc:\/\/com.stripe.stripe-ios\/documentation\/Stripe","kind":"symbol","abstract":[],"type":"topic","role":"collection"},"doc://com.stripe.stripe-ios/documentation/Stripe/STPSourceParams":{"identifier":"doc:\/\/com.stripe.stripe-ios\/documentation\/Stripe\/STPSourceParams","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"STPSourceParams","kind":"identifier"}],"url":"\/documentation\/stripe\/stpsourceparams","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"STPSourceParams"}],"title":"STPSourceParams","abstract":[{"text":"An object representing parameters used to create a Source object.","type":"text"}],"role":"symbol"}}}